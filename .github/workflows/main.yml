name: CI/CD & Deploy Frontend and Backend

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Test backend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.JS ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: NPM install and test (backend)
        run: |
          cd backend
          npm install
          npm test
        env:
          DBHOST: ${{ secrets.DBHOST }}
          TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}
          JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_ID: ${{ secrets.SERVICE_ID }}

  build-frontend:
    name: Build frontend & prepare Pages artifact
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies (frontend)
        run: npm install
        working-directory: ./frontend

      - name: Build project (frontend)
        run: npm run build
        working-directory: ./frontend

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./frontend/dist

  deploy-frontend:
    name: Deploy frontend to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build-frontend, test]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-backend:
    name: Deploy backend to Vercel
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Deploy backend to Vercel
        run: |
          curl -X POST "${{ secrets.VERCEL_DEPLOY_HOOK }}"
